name: CI

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

permissions:
  contents: read

jobs:
  backend:
    name: Backend (Maven build & test)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4

      - name: Set up Temurin JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"
          cache: maven

      # Si tes tests utilisent Testcontainers Postgres, Docker est dispo par défaut sur ubuntu-latest.
      # Sinon, tu peux activer un service Postgres :
      # services:
      #   postgres:
      #     image: postgres:16
      #     env:
      #       POSTGRES_DB: appdb
      #       POSTGRES_USER: app
      #       POSTGRES_PASSWORD: app
      #     ports: [ "5432:5432" ]
      #     options: >-
      #       --health-cmd="pg_isready -U app -d appdb"
      #       --health-interval=5s --health-timeout=5s --health-retries=5

      - name: Build & test
        run: mvn -B -DskipITs=false clean verify

  frontend:
    name: Frontend (Node build)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4

      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "frontend/package-lock.json"

      - name: Install
        run: npm ci

      # Optionnels si tu as configuré ces scripts :
      # - name: Typecheck
      #   run: npm run typecheck
      # - name: Lint
      #   run: npm run lint

      - name: Build
        run: npm run build
